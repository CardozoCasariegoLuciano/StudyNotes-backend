basePath: /api/v1
definitions:
  apimodels.CreateGameData:
    properties:
      description:
        type: string
      title:
        minLength: 3
        type: string
    required:
    - description
    - title
    type: object
  apimodels.EditUserData:
    properties:
      image:
        type: string
      name:
        maxLength: 30
        type: string
    required:
    - name
    type: object
  apimodels.Login:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  apimodels.Register:
    properties:
      confirmPassword:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - confirmPassword
    - email
    - name
    - password
    type: object
  apimodels.User:
    properties:
      email:
        type: string
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      role:
        type: string
    type: object
  dbmodels.Game:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  responses.Response:
    properties:
      data:
        x-nullable: true
      message:
        type: string
      message_type:
        type: string
    type: object
  swaggertypes.SwaggerCustomTypes:
    type: object
info:
  contact: {}
  title: StudyNotes API docTemplate
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login a user and get his token
      parameters:
      - description: request body
        in: body
        name: Register
        required: true
        schema:
          $ref: '#/definitions/apimodels.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/swaggertypes.SwaggerCustomTypes'
                  - properties:
                      email:
                        type: string
                      token:
                        type: string
                      userName:
                        type: string
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: Login a user
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Charge new user into the database
      parameters:
      - description: request body
        in: body
        name: Register
        required: true
        schema:
          $ref: '#/definitions/apimodels.Register'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/swaggertypes.SwaggerCustomTypes'
                  - properties:
                      token:
                        type: string
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: Register new user
      tags:
      - Auth
  /games/:
    get:
      consumes:
      - application/json
      description: List all user games
      parameters:
      - description: Token to validate user
        in: header
        name: Authorization
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dbmodels.Game'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: Get all user games
      tags:
      - Games
    post:
      consumes:
      - application/json
      description: Create new game
      parameters:
      - description: request body
        in: body
        name: GameData
        required: true
        schema:
          $ref: '#/definitions/apimodels.CreateGameData'
      - description: Token to validate user
        in: header
        name: Authorization
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  $ref: '#/definitions/dbmodels.Game'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: Create new game
      tags:
      - Games
  /games/{gameID}:
    delete:
      consumes:
      - application/json
      description: Delete game
      parameters:
      - description: ID to find the game
        in: path
        name: gameID
        required: true
        type: string
      - description: Token to validate user
        in: header
        name: Authorization
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  $ref: '#/definitions/dbmodels.Game'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: Delete game
      tags:
      - Games
    get:
      consumes:
      - application/json
      description: Get one game by param id
      parameters:
      - description: ID to find the game
        in: path
        name: gameID
        required: true
        type: string
      - description: Token to validate user
        in: header
        name: Authorization
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  $ref: '#/definitions/dbmodels.Game'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: Get game by ID
      tags:
      - Games
    put:
      consumes:
      - application/json
      description: Edit game
      parameters:
      - description: ID to find the game
        in: path
        name: gameID
        required: true
        type: string
      - description: request body
        in: body
        name: GameData
        required: true
        schema:
          $ref: '#/definitions/apimodels.CreateGameData'
      - description: Token to validate user
        in: header
        name: Authorization
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  $ref: '#/definitions/dbmodels.Game'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: Edit game
      tags:
      - Games
  /user/:
    get:
      consumes:
      - application/json
      description: Get user using the token in the header
      parameters:
      - description: Token to validate user
        in: header
        name: Authorization
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/apimodels.User'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: Get user
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Edit the user using the token in header
      parameters:
      - description: Token to validate user
        in: header
        name: Authorization
        type: string
      - description: request body
        in: body
        name: UserData
        required: true
        schema:
          $ref: '#/definitions/apimodels.EditUserData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/apimodels.User'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: Edit user
      tags:
      - User
swagger: "2.0"
